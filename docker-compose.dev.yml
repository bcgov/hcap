version: "3.7"

services:
  client:
    image: ${APP_NAME}-client
    container_name: ${APP_NAME}-client
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - 4000:4000
    volumes:
      - ./client:/client # Use client dir in host for hot reloading
      - /client/node_modules # Use node_modules in container
    depends_on:
      - server
    networks:
      - network

  server:
    image: ${APP_NAME}-server
    container_name: ${APP_NAME}-server
    build:
      context: ./server
      dockerfile: Dockerfile.dev
      args:
        VERSION: ${COMMIT_SHA}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - VERSION=${COMMIT_SHA}
    ports:
      - "8080:8080"
      - "9229:9229"
    volumes:
      - ./server:/server # Use server dir in host for hot reloading
      - /server/node_modules # Use node_modules in container
    depends_on:
      - postgres
    networks:
      - network

  postgres:
    image: postgres:13-alpine
    container_name: ${APP_NAME}-postgres
    restart: always
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data-db:/var/lib/postgresql/data
      - ./.docker/postgres/sql-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - network

networks:
  network:
    name: ${APP_NAME}-network
    driver: bridge

volumes:
  postgres-data-db:
    name: ${APP_NAME}-postgres-data-db
