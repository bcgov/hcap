name: Test application (e2e)

on:
  push:
    tags:
      - cypress

  pull_request:
    branches:
      - master
env:
  KEYCLOAK_LOCAL_USERNAME: 'test-admin'
  KEYCLOAK_LOCAL_PASSWORD: ${{ secrets.KEYCLOAK_LOCAL_PASSWORD}}
  KEYCLOAK_LOCAL_AUTH_URL: 'http://keycloak.local.freshworks.club:8080/auth'
  KEYCLOAK_LOCAL_SECRET: ${{ secrets.KEYCLOAK_LOCAL_SECRET }}
  APP_ENV: local
jobs:
  tests:
    name: Cypress / Jest
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Copy sample site and participant to exact location
        run: make copy-sample-data

      - name: Make env
        run: |
          cat > .env << EOF
          ${{ secrets.ENVFILE }}
          KEYCLOAK_LOCAL_SECRET=${{ secrets.KEYCLOAK_LOCAL_SECRET }}
          EOF

      # Pull the latest image to build, and avoid caching pull-only images.
      # (docker pull is faster than caching in most cases.)
      - name: Pull docker images
        run: make ci-docker-pull

      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Build and Run the Application
        run: make local-kc-run

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('server/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm

      - name: Install dependencies
        run: sudo npm i --unsafe-perm=true --prefix server

      - name: Import Users
        run: make kc-import-users

      - name: Add Sites
        run: cd server && POSTGRES_HOST=localhost npm run feed-sites sites.xlsx

      - name: Add Participants
        run: cd server && POSTGRES_HOST=localhost npm run feed-participants participants.xlsx

      - name: Sleep until server is up
        run: |
          until $(curl --output /dev/null --silent --fail http://localhost:4000); do
              echo '.'
              ((c++)) && ((c==12)) && c=0 && break # don't run more than 12 times
              sleep 5
          done

      - name: Add Test Data
        run: cd server && POSTGRES_HOST=localhost npm run feed-data

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          wait-on-timeout: 120
          wait-on: 'http://localhost:4000'

      - name: Sleep for 30 seconds
        run: sleep 30s
        shell: bash

      - name: Jest run
        run: make local-server-tests
