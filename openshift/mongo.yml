Kind: Template
apiVersion: v1
labels:
  app: ${APP_NAME}
parameters:
- name: APP_NAME
  description: App name that OpenShift objects will be prefixed with
  required: true
- name: MEMORY_REQUEST
  description: Amount of Memory to Request.
  value: 2Gi
  required: true
- name: MEMORY_LIMIT
  description: Amount of Memory to Limit.
  value: 5Gi
  required: true
- name: CPU_REQUEST
  description: Amount of CPU to Request.
  value: 500m
  required: true
- name: CPU_LIMIT
  description: Amount of CPU to Limit.
  value: "2"
  required: true
- name: MONGODB_REPLICAS
  description: Number of MongoDB replica pods
  value: "3"
  required: true
- name: MONGODB_USER
  description: Username for MongoDB user that will be used for accessing the database
  generate: expression
  from: "[a-zA-Z0-9]{5}"
  required: true
- name: MONGODB_PASSWORD
  description: Password for the MongoDB connection user
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: MONGODB_ADMIN_PASSWORD
  description: Password for the database admin user
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: MONGODB_REPLICA_NAME
  description: The name of the replica set
  value: rs0
  required: true
- name: MONGODB_KEYFILE_VALUE
  description: The value of the MongoDB keyfile (https://docs.mongodb.com/manual/core/security-internal-authentication/#internal-auth-keyfile)
  generate: expression
  from: "[a-zA-Z0-9]{255}"
  required: true
- name: MONGODB_IMAGE
  description: A reference to a supported MongoDB Docker image
  value: docker-registry.default.svc:5000/openshift/mongodb
  required: true
- name: MONGODB_IMAGE_TAG
  description: Name of the MongoDB tag that should be used
  value: "3.6"
  required: true
- name: VOLUME_CAPACITY
  description: Volume space available for data, e.g. 512Mi, 2Gi
  value: 10Gi
  required: true
- name: SC_MONGO
  description: The Storage Class for the MongoDB
  value: netapp-file-standard
  required: true
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: ${APP_NAME}-mongodb
    labels:
      name: ${APP_NAME}-mongodb
  stringData:
    username: ${MONGODB_USER}
    password: ${MONGODB_PASSWORD}
    admin-username: admin
    admin-password: ${MONGODB_ADMIN_PASSWORD}
    database: ${APP_NAME}
    replica-name: ${MONGODB_REPLICA_NAME}
    mongo-url: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${APP_NAME}-mongodb:27017/${APP_NAME}?replicaSet=${MONGODB_REPLICA_NAME}
    mongo-oplog-url: mongodb://admin:${MONGODB_ADMIN_PASSWORD}@${APP_NAME}-mongodb:27017/local?authSource=admin&replicaSet=${MONGODB_REPLICA_NAME}
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APP_NAME}-mongodb
    labels:
      name: ${APP_NAME}-mongodb
  spec:
    ports:
    - name: mongodb
      port: 27017
    selector:
      name: ${APP_NAME}-mongodb
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APP_NAME}-mongodb-internal
    labels:
      name: ${APP_NAME}-mongodb
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  spec:
    clusterIP: None
    ports:
    - name: mongodb
      port: 27017
    selector:
      name: ${APP_NAME}-mongodb
- kind: StatefulSet
  apiVersion: apps/v1beta1
  metadata:
    name: ${APP_NAME}-mongodb
  spec:
    serviceName: ${APP_NAME}-mongodb-internal
    replicas: ${MONGODB_REPLICAS}
    template:
      metadata:
        labels:
          name: ${APP_NAME}-mongodb
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values: 
                  - ${APP_NAME}-mongodb
              topologyKey: kubernetes.io/hostname
        containers:
        - name: mongo-container
          image: ${MONGODB_IMAGE}:${MONGODB_IMAGE_TAG}
          ports:
          - containerPort: 27017
          args:
          - run-mongod-replication
          volumeMounts:
          - name: mongo-data
            mountPath: /var/lib/mongodb/data
          env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: ${APP_NAME}-mongodb
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: ${APP_NAME}-mongodb
          - name: MONGODB_DATABASE
            valueFrom:
              secretKeyRef:
                key: database
                name: ${APP_NAME}-mongodb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: ${APP_NAME}-mongodb
          - name: MONGO_OPLOG_URL
            valueFrom:
              secretKeyRef:
                key: mongo-oplog-url
                name: ${APP_NAME}-mongodb
          - name: MONGODB_REPLICA_NAME
            valueFrom:
              secretKeyRef:
                key: replica-name
                name: ${APP_NAME}-mongodb
          - name: MONGODB_KEYFILE_VALUE
            value: ${MONGODB_KEYFILE_VALUE}
          - name: MONGODB_SERVICE_NAME
            value: ${APP_NAME}-mongodb-internal
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
              cpu: ${CPU_LIMIT}
            requests:
              memory: ${MEMORY_REQUEST}
              cpu: ${CPU_REQUEST}
          readinessProbe:
            exec:
              command:
              - stat
              - /tmp/initialized
    volumeClaimTemplates:
    - metadata:
        name: mongo-data
        labels:
          name: ${APP_NAME}-mongodb
      spec:
        accessModes: [ ReadWriteOnce ]
        storageClassName: ${SC_MONGO}
        resources:
          requests:
            storage: ${VOLUME_CAPACITY}

