version: "3.7"

services:
  client:
    image: ${APP_NAME}-client
    container_name: ${APP_NAME}-client
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - 4000:4000
    volumes:
      - ./client:/client # Use client dir in host for hot reloading
      - /client/node_modules # Use node_modules in container
    depends_on:
      - server
    networks:
      - network
      
  server:
    image: ${APP_NAME}-server
    container_name: ${APP_NAME}-server
    build:
      context: ./server
      dockerfile: Dockerfile.dev
      args:
        VERSION: ${COMMIT_SHA}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - VERSION=${COMMIT_SHA}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_AUTH_URL=${KEYCLOAK_AUTH_URL}
      - KEYCLOAK_API_CLIENTID=${KEYCLOAK_API_CLIENTID}
      - KEYCLOAK_API_SECRET=${KEYCLOAK_API_SECRET}
      - KEYCLOAK_FE_CLIENTID=${KEYCLOAK_FE_CLIENTID}
    ports:
      - "8080:8080"
      - "9229:9229"
    volumes:
      - ./server:/server # Use server dir in host for hot reloading
      - /server/node_modules # Use node_modules in container
    depends_on:
      - postgres
      - mongodb
    networks:
      - network

  postgres:
    image: postgres:13-alpine
    container_name: ${APP_NAME}-postgres
    restart: always
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data-db:/var/lib/postgresql/data
      - ./.docker/postgres/sql-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - network

  mongodb:
    container_name: ${APP_NAME}-mongodb
    image: mongo:3.6-xenial
    restart: always
    expose:
        - "27017"
    ports:
        - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    volumes:
      - ./.docker/mongo/databaseInit:/docker-entrypoint-initdb.d
      - mongo-log-configdb:/data/configdb
      - mongo-log-db:/data/db
    networks:
      - network

networks:
  network:
    name: ${APP_NAME}-network
    driver: bridge

volumes:
  mongo-log-configdb:
    name: ${APP_NAME}-mongo-log-configdb
  mongo-log-db:
    name: ${APP_NAME}-mongo-log-db
  postgres-data-db:
    name: ${APP_NAME}-postgres-data-db
