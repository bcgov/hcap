version: '3.7'

services:
  client:
    image: ${APP_NAME}-client
    container_name: ${APP_NAME}-client
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - 4000:4000
    volumes:
      - ./client:/client # Use client dir in host for hot reloading
      - ./client/node_modules:/client/node_modules # Use node_modules in container
    depends_on:
      - server
    networks:
      - network

  server:
    image: node:14-alpine
    container_name: ${APP_NAME}-server
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    command: npm run watch
    environment:
      - APP_ENV=local
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MONGO_HOST=mongodb
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - VERSION=${COMMIT_SHA}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_AUTH_URL=${KEYCLOAK_AUTH_URL}
      - KEYCLOAK_API_CLIENTID=${KEYCLOAK_API_CLIENTID}
      - KEYCLOAK_API_SECRET=${KEYCLOAK_API_SECRET}
      - KEYCLOAK_FE_CLIENTID=${KEYCLOAK_FE_CLIENTID}
      - KEYCLOAK_SA_USERNAME=${KEYCLOAK_SA_USERNAME}
      - KEYCLOAK_SA_PASSWORD=${KEYCLOAK_SA_PASSWORD}
      - CHES_CLIENT_ID=${CHES_CLIENT_ID}
      - CHES_CLIENT_SECRET=${CHES_CLIENT_SECRET}
      - CHES_HOST=${CHES_HOST}
      - AUTH_URL=${AUTH_URL}
      - CLIENT_URL=${CLIENT_URL}
      - KC_TEST_SUPER_USER_PWD=${KC_TEST_SUPER_USER_PWD}
      - KC_TEST_EMPLOYER_PWD=${KC_TEST_EMPLOYER_PWD}
      - KC_TEST_HA_PWD=${KC_TEST_HA_PWD}
      - SERVICE_CONFIG=${SERVICE_CONFIG}
      - FEATURE_PHASE_ALLOCATION=${FEATURE_PHASE_ALLOCATION}
    expose:
      - '8080'
    ports:
      - '8080:8080'
    volumes:
      - ./server:/server # Use server dir in host for hot reloading
      - ./server/node_modules:/server/node_modules
    depends_on:
      - postgres
      - mongodb
    networks:
      - network

  postgres:
    image: postgis/postgis:13-3.1-alpine
    container_name: ${APP_NAME}-postgres
    restart: always
    expose:
      - '5432'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./.pgdata:/var/lib/postgresql/data
      - ./.docker/postgres/sql-init:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    networks:
      - network

  mongodb:
    container_name: ${APP_NAME}-mongodb
    image: mongo:3.6-xenial
    restart: always
    expose:
      - '27017'
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    volumes:
      - ./.docker/mongo/databaseInit:/docker-entrypoint-initdb.d
      - ./.mongo-data/configdb:/data/configdb
      - ./.mongo-data/logs:/data/db
    networks:
      - network

networks:
  network:
    name: ${APP_NAME}-network
    driver: bridge
