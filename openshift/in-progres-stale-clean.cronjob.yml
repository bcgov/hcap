kind: Template
apiVersion: v1
labels:
  app: ${APP_NAME}
parameters:
  - name: APP_NAME
    description: App name that OpenShift objects will be prefixed with
    required: true
  - name: IMAGE_NAMESPACE
    description: Namespace from which to pull the image
    required: true
  - name: IMAGE_TAG
    description: Image tag from image stream
    value: latest
    required: true
  - name: CONFIG_VERSION
    description: The github repository version of Config (Commit SHA)
    value: default
objects:
  - kind: CronJob
    apiVersion: batch/v1
    metadata:
      name: ${APP_NAME}-clean-stale-cronjob
    spec:
      schedule: '* 8 * * *'
      concurrencyPolicy: 'Replace'
      startingDeadlineSeconds: 10
      successfulJobsHistoryLimit: 3
      failedJobsHistoryLimit: 3
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                parent: 'cronjobpi'
            spec:
              containers:
                - name: ${APP_NAME}-cron-runner
                  image: image-registry.openshift-image-registry.svc:5000/${IMAGE_NAMESPACE}/${APP_NAME}-server:${IMAGE_TAG}
                  imagePullPolicy: Always
                  command:
                    - container-entrypoint
                    - bash
                    - '-c'
                    - 'node scripts/clean-up.js'
                  env:
                    - name: APP_ENV
                      value: ${IMAGE_TAG}
                    - name: POSTGRES_HOST
                      value: ${APP_NAME}-patroni
                    - name: POSTGRES_DB
                      valueFrom:
                        secretKeyRef:
                          key: db-name
                          name: ${APP_NAME}-patroni
                    - name: POSTGRES_USER
                      valueFrom:
                        secretKeyRef:
                          key: db-username
                          name: ${APP_NAME}-patroni
                    - name: POSTGRES_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: db-password
                          name: ${APP_NAME}-patroni
                    - name: KEYCLOAK_REALM
                      valueFrom:
                        secretKeyRef:
                          key: realm
                          name: ${APP_NAME}-keycloak
              restartPolicy: OnFailure
